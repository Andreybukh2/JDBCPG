<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ArtifactsWorkspaceSettings">
    <artifacts-to-build>
      <artifact name="JDBCPG:Web exploded" />
    </artifacts-to-build>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f50c9144-5c70-4159-ba45-74a555ee0306" name="Changes" comment="В итоге:&#10;1. Создали Connection с нашей БД (в этом примере PG) - Config файл отвечает за соединение с БД и передачу параметров в DriverManager.getConnection;&#10;2. UserDao - содержит методы в которых прописаны SQL-запросы; По сути эти методы работают примерно по одной схеме.&#10;В них есть:&#10;connection = Config.getConnection(); - соединение с БД через методы Config&#10;statement = connection.createStatement(); - возвращает результат SQL-запроса прописанного в параметрах;&#10;Аннотации можно было конечно и не применять.&#10;@SneakyThrows - заменяет блоки try catch для &quot;отлова&quot; SQLException которое предоставляет информацию об ошибке доступа к БД.&#10;@Data - Геттеры, сеттеры;&#10;@AllArgsConstructor - передает начальные значения полей в конструктор; (можно было создать и в ручную через Alt+Insert&#10;3. UserDto - по сути содержит схему нашей таблицы (имена колонок если так можно выразиться)&#10;4. App - реализация методов через создание объекта класса;">
      <change afterPath="$PROJECT_DIR$/.idea/artifacts/JDBCPG_Web_exploded.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/webContexts.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace (2).xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/BookDao.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/BookDto.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/PersonDao.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/SpringConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/UserControllers.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/webapp/WEB-INF/views/allUsers/get-all-some.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/webapp/WEB-INF/views/first/calculator.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/webapp/WEB-INF/views/movies/get-all-movies.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/webapp/WEB-INF/views/movies/new-movie.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/webapp/WEB-INF/views/people/edit-person.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/webapp/WEB-INF/views/people/get-all-people.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/webapp/WEB-INF/views/people/get-person.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/webapp/WEB-INF/views/people/new-person.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/webapp/WEB-INF/web.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/webapp/index.jsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sqldialects.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sqldialects.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/App.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/App.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Config.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Config.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Description" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Description" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/UserDao.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/UserDto.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/PersonDto.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="LogFilters">
    <option name="FILTER_ERRORS" value="false" />
    <option name="FILTER_WARNINGS" value="false" />
    <option name="FILTER_INFO" value="true" />
    <option name="FILTER_DEBUG" value="true" />
    <option name="CUSTOM_FILTER" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Ri7mHGxxmaWhqZUvFG2pzodHqJ" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Andrey/YandexDisk/IdeaProjects/MaximaLesson19&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Artifacts&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.customizations&quot;,
    &quot;spring.configuration.checksum&quot;: &quot;750c5689563df6f971fb2797fa438ea4&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Andbu\YandexDisk\IdeaProjects\JDBCPG\src" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="org.example" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean install" />
    </option>
  </component>
  <component name="RunManager" selected="Tomcat Server.Tomcat 9.0.74">
    <configuration name="App" type="Application" factoryName="Application" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.App" />
      <module name="JDBCPG" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.PersonDao" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AppTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="JDBCPG" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.PersonDao" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example" />
      <option name="MAIN_CLASS_NAME" value="org.example.AppTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ConnectionTest.testConnection" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="JDBCPG" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.PersonDao" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example" />
      <option name="MAIN_CLASS_NAME" value="org.example.ConnectionTest" />
      <option name="METHOD_NAME" value="testConnection" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Tomcat 9.0.74" type="#com.intellij.j2ee.web.tomcat.TomcatRunConfigurationFactory" factoryName="Local" APPLICATION_SERVER_NAME="Tomcat 9.0.74" ALTERNATIVE_JRE_ENABLED="true" ALTERNATIVE_JRE_PATH="$USER_HOME$/.jdks/corretto-17.0.7" nameIsGenerated="true">
      <option name="UPDATING_POLICY" value="restart-server" />
      <deployment>
        <artifact name="JDBCPG:Web exploded">
          <settings>
            <option name="CONTEXT_PATH" value="/JDBCPG_Web_exploded" />
          </settings>
        </artifact>
      </deployment>
      <server-settings>
        <option name="BASE_DIRECTORY_NAME" value="15738c88-6ebb-4920-a925-c55a56f9a645" />
      </server-settings>
      <predefined_log_file enabled="true" id="Tomcat" />
      <predefined_log_file enabled="true" id="Tomcat Catalina" />
      <predefined_log_file id="Tomcat Manager" />
      <predefined_log_file id="Tomcat Host Manager" />
      <predefined_log_file id="Tomcat Localhost Access" />
      <RunnerSettings RunnerId="Debug">
        <option name="DEBUG_PORT" value="63896" />
      </RunnerSettings>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Cover">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Debug">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Profile">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Run">
        <option name="USE_ENV_VARIABLES" value="true" />
        <STARTUP>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </STARTUP>
        <SHUTDOWN>
          <option name="USE_DEFAULT" value="true" />
          <option name="SCRIPT" value="" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
        </SHUTDOWN>
      </ConfigurationWrapper>
      <method v="2">
        <option name="Make" enabled="true" />
        <option name="BuildArtifacts" enabled="true">
          <artifact name="JDBCPG:Web exploded" />
        </option>
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.App" />
      <item itemvalue="JUnit.AppTest" />
      <item itemvalue="JUnit.ConnectionTest.testConnection" />
      <item itemvalue="Tomcat Server.Tomcat 9.0.74" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.AppTest" />
        <item itemvalue="JUnit.ConnectionTest.testConnection" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f50c9144-5c70-4159-ba45-74a555ee0306" name="Changes" comment="" />
      <created>1687721207097</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1687721207097</updated>
      <workItem from="1687721208379" duration="10469000" />
      <workItem from="1687794706191" duration="6995000" />
      <workItem from="1688013752517" duration="62000" />
      <workItem from="1688054699406" duration="2642000" />
      <workItem from="1688335862885" duration="455000" />
      <workItem from="1688407186381" duration="1359000" />
      <workItem from="1688540256420" duration="886000" />
      <workItem from="1688746432216" duration="2527000" />
      <workItem from="1689200725222" duration="364000" />
      <workItem from="1689201098209" duration="23000" />
      <workItem from="1689225275345" duration="1046000" />
      <workItem from="1689226692754" duration="558000" />
      <workItem from="1689265152317" duration="31000" />
      <workItem from="1689267288865" duration="161000" />
      <workItem from="1689268513660" duration="1055000" />
      <workItem from="1689269598704" duration="1977000" />
      <workItem from="1689421654256" duration="1515000" />
      <workItem from="1689436723562" duration="995000" />
      <workItem from="1689700029378" duration="2676000" />
      <workItem from="1689782705867" duration="17000" />
      <workItem from="1689784259578" duration="1046000" />
      <workItem from="1689786584850" duration="2872000" />
      <workItem from="1689791138441" duration="76000" />
      <workItem from="1689791228512" duration="3482000" />
      <workItem from="1689795496336" duration="45000" />
      <workItem from="1689795635109" duration="9837000" />
    </task>
    <task id="LOCAL-00001" summary="В итоге:&#10;1. Создали Connection с нашей БД (в этом примере PG) - Config файл отвечает за соединение с БД и передачу параметров в DriverManager.getConnection;&#10;2. UserDao - содержит методы в которых прописаны SQL-запросы; По сути эти методы работают примерно по одной схеме.&#10;В них есть:&#10;connection = Config.getConnection(); - соединение с БД через методы Config&#10;statement = connection.createStatement(); - возвращает результат SQL-запроса прописанного в параметрах;&#10;Аннотации можно было конечно и не применять.&#10;@SneakyThrows - заменяет блоки try catch для &quot;отлова&quot; SQLException которое предоставляет информацию об ошибке доступа к БД.&#10;@Data - Геттеры, сеттеры;&#10;@AllArgsConstructor - передает начальные значения полей в конструктор; (можно было создать и в ручную через Alt+Insert&#10;3. UserDto - по сути содержит схему нашей таблицы (имена колонок если так можно выразиться)&#10;4. App - реализация методов через создание объекта класса;">
      <created>1687731931334</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1687731931334</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="В итоге:&#10;1. Создали Connection с нашей БД (в этом примере PG) - Config файл отвечает за соединение с БД и передачу параметров в DriverManager.getConnection;&#10;2. UserDao - содержит методы в которых прописаны SQL-запросы; По сути эти методы работают примерно по одной схеме.&#10;В них есть:&#10;connection = Config.getConnection(); - соединение с БД через методы Config&#10;statement = connection.createStatement(); - возвращает результат SQL-запроса прописанного в параметрах;&#10;Аннотации можно было конечно и не применять.&#10;@SneakyThrows - заменяет блоки try catch для &quot;отлова&quot; SQLException которое предоставляет информацию об ошибке доступа к БД.&#10;@Data - Геттеры, сеттеры;&#10;@AllArgsConstructor - передает начальные значения полей в конструктор; (можно было создать и в ручную через Alt+Insert&#10;3. UserDto - по сути содержит схему нашей таблицы (имена колонок если так можно выразиться)&#10;4. App - реализация методов через создание объекта класса;" />
    <option name="LAST_COMMIT_MESSAGE" value="В итоге:&#10;1. Создали Connection с нашей БД (в этом примере PG) - Config файл отвечает за соединение с БД и передачу параметров в DriverManager.getConnection;&#10;2. UserDao - содержит методы в которых прописаны SQL-запросы; По сути эти методы работают примерно по одной схеме.&#10;В них есть:&#10;connection = Config.getConnection(); - соединение с БД через методы Config&#10;statement = connection.createStatement(); - возвращает результат SQL-запроса прописанного в параметрах;&#10;Аннотации можно было конечно и не применять.&#10;@SneakyThrows - заменяет блоки try catch для &quot;отлова&quot; SQLException которое предоставляет информацию об ошибке доступа к БД.&#10;@Data - Геттеры, сеттеры;&#10;@AllArgsConstructor - передает начальные значения полей в конструктор; (можно было создать и в ручную через Alt+Insert&#10;3. UserDto - по сути содержит схему нашей таблицы (имена колонок если так можно выразиться)&#10;4. App - реализация методов через создание объекта класса;" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="org.postgresql.util.PSQLException" package="org.postgresql.util" />
          <option name="timeStamp" value="1" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>